# Name of your application. Used to uniquely configure containers.
service: yoga-bot

# Name of the container image.
image: ghrc.io/davidwessman/yoga

# Deploy to these servers.
servers:
  web:
    hosts:
      - 37.27.182.141
    proxy: false
    options:
      health-cmd: "date"
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: ghcr.io
  username: davidwessman

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: arm64
  # Pass in additional build args needed for your Dockerfile.
  # args:
  #   RUBY_VERSION: <%= File.read('.ruby-version').strip %>

# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
env:
  clear:
    XATA_BRANCH: main
    DATABASE_PATH: /app/data/yoga.db
  secret:
    - DISCORD_CLIENT_ID
    - DISCORD_CLIENT_TOKEN
    - XATA_API_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
volumes:
  - "/data:/app/data"
# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
